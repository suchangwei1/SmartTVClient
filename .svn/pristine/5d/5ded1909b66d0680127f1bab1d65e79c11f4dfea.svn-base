package cordova.plugin.video.push;

import org.apache.cordova.CordovaPlugin;
import org.apache.cordova.CallbackContext;
import org.apache.cordova.PluginResult;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.content.ComponentName;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * This class echoes a string called from JavaScript.
 */
public class cordovaVideoPush extends CordovaPlugin {
	private static final String LOG_TAG = "cordovaVideoPush";
	public final int MY_OP = 11;
	private CallbackContext callback = null;

    @Override
    public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {
        this.callback=callbackContext;
        if (action.equals("SendInfo")) {
            String rtmpUrl = args.getString(0);
			String videoUrl = args.getString(1);
			String deviceType = args.getString(2);
            Log.i("=========rtmpUrl", rtmpUrl);
            this.sendInfo(rtmpUrl,videoUrl,deviceType);
            return true;
        }
        return false;
    }

    private void sendInfo(String rtmpUrl,String videoUrl,String deviceType) {
        if (rtmpUrl != null && rtmpUrl.length() > 0) {
          try {
              Intent intent = new Intent();

              ComponentName cmp = new ComponentName("test.com.livetest","test.com.livetest.CameraActivity");
              intent.setAction(Intent.ACTION_MAIN);
              //intent.addCategory(Intent.CATEGORY_LAUNCHER);
              //intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
              intent.setComponent(cmp);
              intent.putExtra("rtmpUrl", rtmpUrl);
			  intent.putExtra("videoUrl", videoUrl);
			  intent.putExtra("deviceType", deviceType);
              this.cordova.startActivityForResult(this,intent,MY_OP);
              Log.i("=========rtmpUrl==========",rtmpUrl);

          } catch (Exception e) {
              e.printStackTrace();
          }
        }
    }


	//onActivityResult为第二个Activity执行完后的回调接收方法
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent intent){
      super.onActivityResult(requestCode, resultCode, intent);
	  Log.i("=========requestCode==========",""+requestCode);
	  Log.i("=========resultCode==========",""+resultCode);
      if (requestCode==MY_OP){
        if (resultCode==8){
          //Bundle b=intent.getExtras();
          //String str=b.getString("close");
          //Log.i("=========str==========",str);
          callback.success("close");
        }
      }
    }
}
